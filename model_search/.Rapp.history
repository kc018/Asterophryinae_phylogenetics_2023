dir <- "output_10reps"
files <- list.files(path=dir)
files
files <- grep("nex.iqtree", files)
files
files <- grep("nex.iqtree", files, value=T)
files <- list.files(path=dir)#
files <- grep("nex.iqtree", files, value=T)
files
files <- paste(dir, files, sep="/")
files
lines <- sapply( files, function(x) {#
				        d <- readLines(x)#
				        d[grepl("^Akaike", d)] #
				      }  #
			       ) #
vals <- gsub(".*?([0-9]+.[0-9]+).*", "\\1", lines)#
runs <- names(vals)#
aic <- as.numeric(vals)#
#
dat <- data.frame( runs=runs, aic=aic)#
dat <- dat[ order(dat$aic), ]
dat
sink("trees_from_partitionfinder_models_aic.txt")#
#
cat("AIC scores of trees from 10 runs after PartitionFinder and tree estimation:\n")#
print(dat)#
cat(paste("delta aic worst - best: ", round(max(dat$aic) - min(dat$aic))))#
sink()
dir <- "output_10reps"#
outfile <- "trees_from_partitionfinder_models_aic.txt"#
#
function( dir, file= outfile) {#
	files <- list.files(path=dir)#
	files <- grep("nex.iqtree", files, value=T)#
	files <- paste(dir, files, sep="/")#
	lines <- sapply( files, function(x) {#
					        d <- readLines(x)#
					        d[grepl("^Akaike", d)] #
					      }  #
				       ) #
	vals <- gsub(".*?([0-9]+.[0-9]+).*", "\\1", lines)#
	runs <- names(vals)#
	aic <- as.numeric(vals)#
	dat <- data.frame( runs=runs, aic=aic)#
	dat <- dat[ order(dat$aic), ]#
	sink(outfile)#
	cat("AIC scores of trees from 10 runs after PartitionFinder and tree estimation:\n")#
	print(dat)#
	cat(paste("delta aic worst - best: ", round(max(dat$aic) - min(dat$aic))))#
	sink()#
}
modelaic <- function( dir, file= outfile) {#
	files <- list.files(path=dir)#
	files <- grep("nex.iqtree", files, value=T)#
	files <- paste(dir, files, sep="/")#
	lines <- sapply( files, function(x) {#
					        d <- readLines(x)#
					        d[grepl("^Akaike", d)] #
					      }  #
				       ) #
	vals <- gsub(".*?([0-9]+.[0-9]+).*", "\\1", lines)#
	runs <- names(vals)#
	aic <- as.numeric(vals)#
	dat <- data.frame( runs=runs, aic=aic)#
	dat <- dat[ order(dat$aic), ]#
	sink(outfile)#
	cat("AIC scores of trees from 10 runs after PartitionFinder and tree estimation:\n")#
	print(dat)#
	cat(paste("delta aic worst - best: ", round(max(dat$aic) - min(dat$aic))))#
	sink()#
}
summaryaic <- function( dir, file= outfile) {#
	files <- list.files(path=dir)#
	files <- grep("nex.iqtree", files, value=T)#
	files <- paste(dir, files, sep="/")#
	lines <- sapply( files, function(x) {#
					        d <- readLines(x)#
					        d[grepl("^Akaike", d)] #
					      }  #
				       ) #
	vals <- gsub(".*?([0-9]+.[0-9]+).*", "\\1", lines)#
	runs <- names(vals)#
	aic <- as.numeric(vals)#
	dat <- data.frame( runs=runs, aic=aic)#
	dat <- dat[ order(dat$aic), ]#
	sink(outfile)#
	cat("AIC scores of trees from 10 runs after PartitionFinder and tree estimation:\n")#
	print(dat)#
	cat(paste("delta aic worst - best: ", round(max(dat$aic) - min(dat$aic))))#
	sink()#
}
summaryaic(dir="output_10reps", outfile="AIC_partifionfinder+merge_10runs.txt" )
summaryaic <- function( dir, outfile) {#
	files <- list.files(path=dir)#
	files <- grep("nex.iqtree", files, value=T)#
	files <- paste(dir, files, sep="/")#
	lines <- sapply( files, function(x) {#
					        d <- readLines(x)#
					        d[grepl("^Akaike", d)] #
					      }  #
				       ) #
	vals <- gsub(".*?([0-9]+.[0-9]+).*", "\\1", lines)#
	runs <- names(vals)#
	aic <- as.numeric(vals)#
	dat <- data.frame( runs=runs, aic=aic)#
	dat <- dat[ order(dat$aic), ]#
	sink(outfile)#
	cat("AIC scores of trees from 10 runs after PartitionFinder and tree estimation:\n")#
	print(dat)#
	cat(paste("delta aic worst - best: ", round(max(dat$aic) - min(dat$aic))))#
	sink()#
}#
#
summaryaic(dir="output_10reps", outfile="AIC_partifionfinder+merge_10runs.txt" )
summaryaic(dir="output_10reps", outfile="AIC_partifionfinder_10runs.txt" )
summaryaic(dir="output_nomerge_10reps", outfile="AIC_modelselection_nomerge_10runs.txt" )
dir <- "output_100reps"#
outfile <- "trees_from_partitionfinder_models_aic.txt"#
#
summaryaic <- function( dir, outfile) {#
	files <- list.files(path=dir)                          # get list of filenames from the directory#
	files <- grep("nex.iqtree", files, value=T)  # get files ending in nex.iqtree#
	files <- paste(dir, files, sep="/")                # paste the path to the filename#
	lines <- sapply( files, function(x) {            # for each file 		#
					        d <- readLines(x)             # read the lines #
					        d[grepl("^Akaike", d)]       # select lines that start with Akaike #
					      }                                         # lines is a vector lines that start with Akaike#
				       ) #
	vals <- gsub(".*?([0-9]+.[0-9]+).*", "\\1", lines)    # for each line, extract the decimal number. #
	runs <- names(vals)                                           # the names hold the run number#
	aic <- as.numeric(vals)                                      # coerce to numeric, save as aic#
	dat <- data.frame( runs=runs, aic=aic)     # make a dataframe from run name and aic score#
	dat <- dat[ order(dat$aic), ]                      # sort by aic score#
#
    return(dat)#
}
aic1 <- summaryaic(dir="output_100reps", outfile="AIC_partifionfinder_100runs.txt" )
aic2 <- summaryaic(dir="output_nomerge_100reps", outfile="AIC_modelselection_nomerge_100runs.txt" )
aic1
aic2
aic <- rbind(aic1, aic2)
aic
class(aic)
dim(aic)
aic <- aic[ order(dat$aic), ]	                     # sort by aic score
aic <- aic[ order(aic$aic), ]	                     # sort by aic score
aic
sink(outfile)                                              # start writing to the output file#
	cat("AIC scores of trees from 100 runs after PartitionFinder and tree estimation:\n")#
	print(dat)#
	cat(paste("delta aic worst - best: ", round(max(dat$aic) - min(dat$aic))))#
sink()
sink(outfile)                                              # start writing to the output file#
	cat("AIC scores of trees from 100 runs after PartitionFinder and tree estimation:\n")#
	print(dat)#
	cat(paste("delta aic worst - best: ", round(max(dat$aic) - min(dat$aic))))#
sink()
sink(outfile)                                              # start writing to the output file#
	cat("AIC scores of trees from 100 runs after PartitionFinder and tree estimation:\n")#
	print(aic)#
	cat(paste("delta aic worst - best: ", round(max(aic$aic) - min(aic$aic))))#
sink()
source("aic.R")
